
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-java-application'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.5'
    }
}


//mainClassName = "org.apache.camel.cdi.Main"
mainClassName = "com.im.ext.xchem.filedrop.Main"

repositories {
    jcenter()
}

def camelVersion = '2.18.1'

dependencies {

    compile 'org.slf4j:slf4j-simple:1.7.10'

    //compile 'org.codehaus.groovy:groovy-all:2.4.7'

    //compile "org.jboss.weld.se:weld-se:2.4.1.Final"
    //compile "org.apache.deltaspike.cdictrl:deltaspike-cdictrl-weld:1.7.2"

    compile "org.apache.camel:camel-core:$camelVersion"
    compile "org.apache.camel:camel-box:$camelVersion"
    compile "org.apache.camel:camel-exec:$camelVersion"
    //compile "org.apache.camel:camel-cdi:$camelVersion"

    //testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'junit:junit:4.12'
}

/*
Docker image generation.

To run the image you need to create an application.properties file with the congfiguration params
and then run with something like this:
docker run -it --rm -v $(PWD)/application.properties:/xchem_filedrop/application.properties -w /xchem_filedrop informaticsmatters/xchem_filedrop
 */
docker {
    javaApplication {
        baseImage = 'informaticsmatters/pipelines'
        maintainer = 'Tim Dudgeon "tdudgeon@informaticsmatters.com"'
        ports = []
        tag = 'informaticsmatters/xchem_filedrop'
    }
}